from flask import Flask
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv
import os

# Load environment variables from .env file
load_dotenv()
DATABASE_URL = os.getenv("DATABASE_URL")

# Ensure the database URL is available
if not DATABASE_URL:
    raise ValueError("DATABASE_URL environment variable is not set")

# Initialize Flask app
app = Flask(__name__)

# Database setup with SSL if necessary
engine = create_engine(DATABASE_URL, connect_args={"sslmode": "require"})
Base = declarative_base()

# Route to create database tables
@app.route('/create-db')
def create_db():
    # Create all tables based on the models
    Base.metadata.create_all(bind=engine)
    return "Database and tables created!"

if __name__ == '__main__':
    # Run the Flask app
    port = int(os.getenv("PORT", 8080))  # Use PORT env variable if available, otherwise default to 8080
    app.run(host='0.0.0.0', port=port, debug=True)
